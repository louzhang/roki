@model GuildChannelModel

@{
    ViewData["Title"] = Model.GuildConfig.Guild.Name + " - Manage Server";
}

<div x-data="{ isOpen: false }" class="container w-full lg:max-w-6xl mx-auto pt-3 sm:pt-4 dark:text-white mb-12">
<div class="flex justify-between ml-4 md:ml-0">
    <div class="flex items-center">
        @if (string.IsNullOrWhiteSpace(Model.GuildConfig.Guild.Icon))
        {
            <img class="w-10 rounded-full" src="https://ui-avatars.com/api/?name=@Model.GuildConfig.Guild.Name" alt="=@Model.GuildConfig.Guild.Name">
        }
        else
        {
            <img class="w-10 rounded-full" src="https://cdn.discordapp.com/icons/@Model.GuildConfig.GuildId/@Model.GuildConfig.Guild.Icon" alt="=@Model.GuildConfig.Guild.Name">
        }
        <h1 class="pl-4 text-2xl font-medium tracking-tight">@Model.GuildConfig.Guild.Name - Manage</h1>
    </div>
    <div class="mr-4 block sm:hidden">
        <button @@click="isOpen = !isOpen" class="p-2 focus:outline-none">
            <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
            </svg>
        </button>
    </div>
</div>
<div class="mt-3" id="mobile-nav"
     x-show="isOpen"
     x-transition:enter="transition ease-out duration-300"
     x-transition:enter-start="opacity-0 transform scale-90"
     x-transition:enter-end="opacity-100 transform scale-100"
     x-transition:leave="transition ease-in duration-300"
     x-transition:leave-start="opacity-100 transform scale-100"
     x-transition:leave-end="opacity-0 transform scale-90">
    <nav class="dark:bg-gray-900">
        <div class="flex flex-none flex-col w-full">
            <div class="pl-2 py-2 dark:bg-gray-700 font-medium">Server Settings</div>
            <a class="pl-4 py-2 text-sm" href="#core">Core</a>
            <a class="pl-4 py-2 text-sm" href="#currency">Currency</a>
            <a class="pl-4 py-2 text-sm" href="#xp">Experience</a>
            <a class="pl-4 py-2 text-sm" href="#games">Games</a>
            <a class="pl-4 py-2 text-sm" href="#gambling">Gambling</a>
            <div class="pl-2 py-2 dark:bg-gray-700 font-medium">Channel Settings</div>
            <a class="pl-4 py-2 text-sm" href="/manage/@Model.GuildConfig.GuildId/channels">Manage Channels</a>
            <div class="pl-2 py-2 dark:bg-gray-700 font-medium">Commands</div>
            <a class="pl-4 py-2 text-sm" href="#">Command Stuff</a>
        </div>
    </nav>
</div>
<div class="flex">
<div class="sm:w-80 hidden sm:block">
    <nav class="md:sticky md:top-20 mr-2 mt-4 shadow-md">
        <div class="flex flex-none flex-col bg-gray-400 dark:bg-gray-700 w-60 rounded">
            <div class="sidenav-header">Server Settings</div>
            <a class="nav-settings sidenav core" href="#core" id="core-nav">Core</a>
            <a class="nav-settings sidenav currency" href="#currency">Currency</a>
            <a class="nav-settings sidenav xp" href="#xp">Experience</a>
            <a class="nav-settings sidenav games" href="#games">Games</a>
            <a class="nav-settings sidenav gambling" href="#gambling">Gambling</a>
            <div class="sidenav-header">Channel Settings</div>
            <a class="sidenav channels" href="/manage/@Model.GuildConfig.GuildId/channels">Manage Channels</a>
            <div class="sidenav-header">Commands</div>
            <a class="py-2 pl-4 rounded-b hover:bg-gray-500 text-sm" href="#">Command Stuff</a>
        </div>
    </nav>
</div>
<div class="w-full pl-4 pr-4 md:pr-0 text-sm">
<form id="form-data" onchange="checkForm()" onsubmit="return false;" novalidate>
<div class="settings container" id="core">
    <h1 class="text-3xl font-medium tracking-tight pt-3">Core Settings</h1>
    <div class="block" aria-hidden="true">
        <div class="py-4">
            <div class="border-t border-gray-200"></div>
        </div>
    </div>
    <div class="rounded-md overflow-hidden bg-grey-100 dark:bg-gray-900 px-4 pt-3 pb-4">
        <div>
            <label for="prefix" class="input-label">Prefix</label>
            <input type="text" id="prefix" name="prefix" value="@Model.GuildConfig.Prefix" class="dark:bg-gray-700 dark:focus:ring-pink-900 dark:focus:border-pink-900 dark:border-gray-800 mt-1 flex rounded-md block w-20 font-mono" maxlength="5" placeholder=".">
            <div class="validation-error" id="guild_prefix_error"></div>
            <span class="input-help" id="guild-prefix-help">This is how you invoke bot commands.</span>
        </div>
        <div>
            <div class="mt-4 flex justify-between">
                <label class="input-label">Default Message Logging</label>
                <label for="guild_logging" class="cursor-pointer mr-2">
                    <div class="relative">
                        <input id="guild_logging" type="checkbox" class="hidden" name="guild_logging" @(Model.GuildConfig.Logging ? "checked" : "")>
                        <div class="w-10 h-4 bg-gray-400 rounded-full shadow-inner"></div>
                        <div class="toggle -top-1 -left-1 transition duration-300 ease-in-out absolute w-6 h-6 bg-white rounded-full inset-y-0 left-0"></div>
                    </div>
                </label>
            </div>
            <span class="input-help" id="guild-logging-help">New channels will have logging enabled/disabled.</span>
        </div>
        <div>
            <div class="mt-4 flex justify-between">
                <label class="input-label">Default Currency Generation</label>
                <label for="guild_curr" class="cursor-pointer mr-2">
                    <div class="relative">
                        <input id="guild_curr" type="checkbox" class="hidden" name="guild_curr" @(Model.GuildConfig.CurrencyGen ? "checked" : "")>
                        <div class="w-10 h-4 bg-gray-400 rounded-full shadow-inner"></div>
                        <div class="toggle -top-1 -left-1 transition duration-300 ease-in-out absolute w-6 h-6 bg-white rounded-full inset-y-0 left-0"></div>
                    </div>
                </label>
            </div>
            <span class="input-help" id="guild-curr-help">New channels will have currency generation enabled/disabled.</span>
        </div>
        <div>
            <div class="mt-4 flex justify-between">
                <label class="input-label">Default XP Gain</label>
                <label for="guild_xp" class="cursor-pointer mr-2">
                    <div class="relative">
                        <input id="guild_xp" type="checkbox" class="hidden" name="guild_xp" @(Model.GuildConfig.XpGain ? "checked" : "")>
                        <div class="w-10 h-4 bg-gray-400 rounded-full shadow-inner"></div>
                        <div class="toggle -top-1 -left-1 transition duration-300 ease-in-out absolute w-6 h-6 bg-white rounded-full inset-y-0 left-0"></div>
                    </div>
                </label>
            </div>
            <span class="input-help" id="guild-xp-help">New channels will have XP enabled/disabled.</span>
        </div>
        <div>
            <div class="mt-4 flex justify-between">
                <label class="input-label">Show Help on Command Error</label>
                <label for="guild_show_help" class="cursor-pointer mr-2">
                    <div class="relative">
                        <input id="guild_show_help" type="checkbox" class="hidden" name="guild_show_help" @(Model.GuildConfig.ShowHelpOnError ? "checked" : "")>
                        <div class="w-10 h-4 bg-gray-400 rounded-full shadow-inner"></div>
                        <div class="toggle -top-1 -left-1 transition duration-300 ease-in-out absolute w-6 h-6 bg-white rounded-full inset-y-0 left-0"></div>
                    </div>
                </label>
            </div>
            <span class="input-help" id="guild-help-help">Incorrect command usages will show a help message.</span>
        </div>
    </div>
</div>
<div class="settings container" id="currency">
    <h1 class="section-header">Currency Settings</h1>
    <div class="block" aria-hidden="true">
        <div class="py-4">
            <div class="border-t border-gray-200"></div>
        </div>
    </div>
    <div class="rounded-md bg-grey-100 dark:bg-gray-900 px-4 py-4">
        <div>
            <div class="flex space-x-12">
                <div class="rounded-md">
                    <label for="guild_curr_name" class="input-label">Currency Name</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="text" name="guild_curr_name" id="guild_curr_name" value="@Model.GuildConfig.CurrencyName" class="input-regular-32">
                    </div>
                    <div class="validation-error" id="guild_curr_error"></div>
                </div>
                <div class="rounded-md">
                    <label for="guild_curr_name_p" class="input-label">Plural Name</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="text" name="guild_curr_name_p" id="guild_curr_name_p" value="@Model.GuildConfig.CurrencyNamePlural" class="input-regular-32">
                    </div>
                    <div class="validation-error" id="guild_curr_p_error"></div>
                </div>
            </div>
            <span class="input-help" id="guild-curr-name-help">Change the currency name on your server.</span>
        </div>
        <div>
            <div class="mt-2 rounded-md">
                <label for="guild_curr_icon" class="input-label">Icon</label>
                <div class="mt-1 flex rounded-md">
                    <input type="text" name="guild_curr_icon" id="guild_curr_icon" value="@Model.GuildConfig.CurrencyIcon" class="dark:bg-gray-700 dark:focus:ring-pink-900 dark:focus:border-pink-900 dark:border-gray-800 border rounded-md block w-80 font-mono">
                </div>
                <div class="validation-error" id="guild_curr_icon_error"></div>
            </div>
            <span class="input-help" id="guild-curr-icon-help">Change the currency icon. Use <span class="font-mono">\:emoji:</span> in your sever to get the custom emoji ID</span>
        </div>
        <div>
            <div class="flex space-x-12 mt-4">
                <div class="rounded-md">
                    <label for="guild_curr_default" class="input-label">Starting Cash</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_curr_default" id="guild_curr_default" value="@Model.GuildConfig.CurrencyDefault" class="input-regular-32">
                    </div>
                    <div class="validation-error" id="guild_curr_default_cash_error"></div>
                </div>
                <div class="rounded-md">
                    <label for="guild_inv_default" class="input-label">Starting Investing</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_inv_default" id="guild_inv_default" value="@Model.GuildConfig.InvestingDefault" class="input-regular-32">
                    </div>
                    <div class="validation-error" id="guild_curr_default_inv_error"></div>
                </div>
            </div>
            <span class="input-help" id="guild-curr-default-help">Default starting currency for users.</span>
        </div>
        <div>
            <div class="mt-4 rounded-md">
                <label for="guild_curr_prob" class="input-label">Generation Probability</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_curr_prob" id="guild_curr_prob" value="@(Model.GuildConfig.CurrencyGenerationChance * 100)" class="input-group-text">
                    <span class="input-group-info">%</span>
                </div>
                <div class="validation-error" id="guild_curr_prob_error"></div>
            </div>
            <span class="input-help" id="guild-curr-gen-help">Chance for currency to drop on each message.</span>
        </div>
        <div>
            <div class="mt-4 rounded-md">
                <label for="guild_curr_cd" class="input-label">Generation Cooldown</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_curr_cd" id="guild_curr_cd" value="@Model.GuildConfig.CurrencyGenerationCooldown" class="input-group-text">
                    <span class="input-group-info">sec</span>
                </div>
                <div class="validation-error" id="guild_curr_cd_error"></div>
            </div>
            <span class="input-help" id="guild-curr-cd-help">Cooldown before currency can drop again.</span>
        </div>
        <div>
            <div class="flex flex-wrap mt-4">
                <div class="rounded-md mr-8">
                    <label for="guild_curr_drop" class="input-label">Minimum Drop</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_curr_drop" id="guild_curr_drop" value="@Model.GuildConfig.CurrencyDropAmount" class="input-regular-20">
                    </div>
                    <div class="validation-error" id="guild_curr_drop_error"></div>
                </div>
                <div class="rounded-md mr-8">
                    <label for="guild_curr_drop_max" class="input-label">Maximum Drop</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_curr_drop_max" id="guild_curr_drop_max" value="@Model.GuildConfig.CurrencyDropAmountMax" class="input-regular-20">
                    </div>
                    <div class="validation-error" id="guild_curr_drop_max_error"></div>
                </div>
                <div class="rounded-md">
                    <label for="guild_curr_drop_rare" class="input-label pt-1 sm:pt-0">Rare Drop</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_curr_drop_rare" id="guild_curr_drop_rare" value="@Model.GuildConfig.CurrencyDropAmountRare" class="input-regular-20">
                    </div>
                    <div class="validation-error" id="guild_curr_drop_rare_error"></div>
                </div>
            </div>
            <span class="input-help" id="guild-curr-drop-help">Drop amounts for currency. Rare drops ocurrs 1% of the time, in addtion to the drop chance.</span>
        </div>
    </div>
</div>
<div class="settings container" id="xp">
    <h1 class="section-header">Experience Settings</h1>
    <div class="block" aria-hidden="true">
        <div class="py-4">
            <div class="border-t border-gray-200"></div>
        </div>
    </div>
    <div class="rounded-md overflow-hidden bg-grey-100 dark:bg-gray-900 px-4 py-4">
        <div>
            <div class="rounded-md">
                <label for="guild_xp_pm" class="input-label">XP Per Message</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_xp_pm" id="guild_xp_pm" value="@Model.GuildConfig.XpPerMessage" class="input-regular-20">
                </div>
                <div class="validation-error" id="guild_xp_pm_error"></div>
            </div>
            <span class="input-help" id="guild-xp-pm-help">XP gained per message.</span>
        </div>
        <div>
            <div class="mt-4 rounded-md">
                <label for="guild_xp_cd" class="input-label">XP Cooldown</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_xp_cd" id="guild_xp_cd" value="@Model.GuildConfig.XpCooldown" class="input-group-text">
                    <span class="input-group-info">sec</span>
                </div>
                <div class="validation-error" id="guild_xp_cd_error"></div>
            </div>
            <span class="input-help" id="guild-xp-cd-help">Cooldown before users can gain XP again.</span>
        </div>
        <div>
            <div class="mt-4 rounded-md">
                <label for="guild_xp_cd_fast" class="input-label">XP Fast Cooldown</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_xp_cd_fast" id="guild_xp_cd_fast" value="@Model.GuildConfig.XpFastCooldown" class="input-group-text">
                    <span class="input-group-info">sec</span>
                </div>
                <div class="validation-error" id="guild_xp_cd_fast_error"></div>
            </div>
            <span class="input-help" id="guild-xp-fcd-help">Cooldown for users who bought a "Fast XP" boost. (Purchasable in the Server's Store)</span>
        </div>
        <div>
            <div class="mt-4 rounded-md">
                <label for="guild_xp_notif" class="input-label">Level Up Notification</label>
                <div class="mt-1 flex rounded-md">
                    <select class="input-regular-32" name="guild_xp_notif" id="guild_xp_notif">
                        <!option value="0" @(Model.GuildConfig.NotificationLocation == 1 ? "selected" : "")>None</!option>
                        <!option value="1" @(Model.GuildConfig.NotificationLocation == 1 ? "selected" : "")>Server</!option>
                        <!option value="2" @(Model.GuildConfig.NotificationLocation == 2 ? "selected" : "")>DM</!option>
                    </select>
                </div>
            </div>
            <span class="input-help" id="guild-xp-notif-help">Where users receive their level up notification by default.</span>
        </div>
    </div>
</div>
<div class="settings container" id="games">
    <h1 class="section-header">Games Settings</h1>
    <div class="block" aria-hidden="true">
        <div class="py-4">
            <div class="border-t border-gray-200"></div>
        </div>
    </div>
    <div class="rounded-md overflow-hidden bg-grey-100 dark:bg-gray-900 px-4 py-4">
        <h1 class="text-xl font-normal tracking-tight">Jeopardy!</h1>
        <span class="input-help" id="guild-jp-help">Slightly modified version of Jeopardy! made for Discord.</span>
        <div>
            <div class="rounded-md mt-3">
                <label for="guild_jeopardy_mult" class="input-label">Win Payout</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_jeopardy_mult" id="guild_jeopardy_mult" value="@Model.GuildConfig.JeopardyWinMultiplier" class="input-group-text">
                    <span class="input-group-info">×</span>
                </div>
                <div class="validation-error" id="guild_jp_mult_error"></div>
            </div>
            <span class="input-help" id="guild-jp-mult-help">Optionally reduce the winnings for Jeopardy!.</span>
        </div>
        <h1 class="text-xl font-normal tracking-tight mt-4">Trivia</h1>
        <span class="input-help" id="guild-trivia-help">Multiple choice trivia questions on a variety of categories.</span>
        <div>
            <div class="rounded-md mt-3">
                <label for="guild_trivia_min" class="input-label">Minimum Correct</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_trivia_min" id="guild_trivia_min" value="@(Model.GuildConfig.TriviaMinCorrect * 100)" class="input-group-text">
                    <span class="input-group-info">%</span>
                </div>
                <div class="validation-error" id="guild_trivia_min_error"></div>
            </div>
            <span class="input-help" id="guild-trivia-min-help">Minimum percentage of correct answers to get payout.</span>
        </div>
        <div>
            <div class="flex flex-wrap mt-4">
                <div class="rounded-md mr-8">
                    <label for="guild_trivia_easy" class="input-label">Easy Reward</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_trivia_easy" id="guild_trivia_easy" value="@Model.GuildConfig.TriviaEasy" class="input-regular-20">
                    </div>
                    <div class="validation-error" id="guild_trivia_easy_error"></div>
                </div>
                <div class="rounded-md mr-8">
                    <label for="guild_trivia_med" class="input-label">Medium Reward</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_trivia_med" id="guild_trivia_med" value="@Model.GuildConfig.TriviaMedium" class="input-regular-20">
                    </div>
                    <div class="validation-error" id="guild_trivia_med_error"></div>
                </div>
                <div class="rounded-md">
                    <label for="guild_trivia_hard" class="input-label pt-1 sm:pt-0">Hard Reward</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_trivia_hard" id="guild_trivia_hard" value="@Model.GuildConfig.TriviaHard" class="input-regular-20">
                    </div>
                    <div class="validation-error" id="guild_trivia_hard_error"></div>
                </div>
            </div>
            <span class="input-help" id="guild-trivia-reward-help">Configure rewards for trivia based on difficulty.</span>
        </div>
    </div>
</div>
<div class="settings container sm:mb-16" id="gambling">
    <h1 class="section-header">Gambling Settings</h1>
    <div class="block" aria-hidden="true">
        <div class="py-4">
            <div class="border-t border-gray-200"></div>
        </div>
    </div>
    <div class="rounded-md overflow-hidden bg-grey-100 dark:bg-gray-900 px-4 py-4">
        <h1 class="text-xl font-normal tracking-tight">Bet Flip</h1>
        <span class="input-help" id="guild-bf-help">Bet on the results of a coinflip.</span>
        <div>
            <div class="flex flex-wrap mt-3">
                <div class="rounded-md mr-8">
                    <label for="guild_bf_min" class="input-label">Minimum Bet</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_bf_min" id="guild_bf_min" value="@Model.GuildConfig.BetFlipMin" class="input-regular-32">
                    </div>
                    <div class="validation-error" id="guild_bf_min_error"></div>
                </div>
                <div class="rounded-md">
                    <label for="guild_bf_mult" class="input-label">Payout Multiplier</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_bf_mult" id="guild_bf_mult" value="@Model.GuildConfig.BetFlipMultiplier" class="input-group-text">
                        <span class="input-group-info">×</span>
                    </div>
                    <div class="validation-error" id="guild_bf_mult_error"></div>
                </div>
            </div>
            <span class="input-help" id="guild-bf-bet-help">Minimum bet to play.</span>
        </div>
        <h1 class="text-xl font-normal tracking-tight mt-4">Bet Flip Multi</h1>
        <span class="input-help" id="guild-bfm-help">Guess the results of multiple coinflips at the same time.</span>
        <div>
            <div class="flex flex-wrap mt-3">
                <div class="rounded-md mr-8">
                    <label for="guild_bfm_min_guess" class="input-label">Minimum Guesses</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_bfm_min_guess" id="guild_bfm_min_guess" value="@Model.GuildConfig.BetFlipMMinGuesses" class="input-regular-32">
                    </div>
                    <div class="validation-error" id="guild_bfm_min_guess_error"></div>
                </div>
                <div class="rounded-md mr-8">
                    <label for="guild_bfm_min" class="input-label">Minimum Bet</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_bfm_min" id="guild_bfm_min" value="@Model.GuildConfig.BetFlipMMinMultiplier" class="input-group-text">
                        <span class="input-group-info">×</span>
                    </div>
                    <div class="validation-error" id="guild_bfm_min_bet_error"></div>
                </div>
                <div class="rounded-md mr-8">
                    <label for="guild_bfm_min_correct" class="input-label pt-1 sm:pt-0">Minimum Correct</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_bfm_min_correct" id="guild_bfm_min_correct" value="@(Model.GuildConfig.BetFlipMMinCorrect * 100)" class="input-group-text">
                        <span class="input-group-info">%</span>
                    </div>
                    <div class="validation-error" id="guild_bfm_min_correct_error"></div>
                </div>
                <div class="rounded-md">
                    <label for="guild_bfm_mult" class="input-label pt-1 sm:pt-0">Payout Multiplier</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_bfm_mult" id="guild_bfm_mult" value="@Model.GuildConfig.BetFlipMMultiplier" class="input-group-text">
                        <span class="input-group-info">×</span>
                    </div>
                    <div class="validation-error" id="guild_bfm_mult_error"></div>
                </div>
            </div>
            <span class="input-help" id="guild-bfm-min-help">Minimum number of guesses. Minimum amount to bet, based on the number of guesses. Minimum correct percentage to get payout.</span>
        </div>
        <h1 class="text-xl font-normal tracking-tight mt-4">Bet Dice (6d6)</h1>
        <span class="input-help" id="guild-bd-help">Guess the sum of 6 six-sided dice rolls.</span>
        <div>
            <div class="rounded-md mt-3">
                <label for="guild_bd_min" class="input-label">Minimum Bet</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_bd_min" id="guild_bd_min" value="@Model.GuildConfig.BetDiceMin" class="input-regular-20">
                </div>
                <div class="validation-error" id="guild_bd_min_error"></div>
            </div>
            <span class="input-help" id="guild-bd-min-help">Minimum bet to play.</span>
        </div>
        <h1 class="text-xl font-normal tracking-tight mt-4">Bet Roll (1d100)</h1>
        <span class="input-help" id="guild-br-help">Guess the results of a roll of a 100-sided die.</span>
        <div>
            <div class="rounded-md mt-3">
                <label for="guild_br_min" class="input-label">Minimum Bet</label>
                <div class="mt-1 flex rounded-md">
                    <input type="number" name="guild_br_min" id="guild_br_min" value="@Model.GuildConfig.BetRollMin" class="input-regular-20">
                </div>
                <div class="validation-error" id="guild_br_min_error"></div>
            </div>
            <span class="input-help" id="guild-br-min-help">Minimum bet to play.</span>
        </div>
        <div>
            <div class="flex flex-wrap mt-4">
                <div class="rounded-md mr-8">
                    <label for="guild_br_71" class="input-label">≥ 71</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_br_71" id="guild_br_71" value="@Model.GuildConfig.BetRoll71Multiplier" class="input-group-text">
                        <span class="input-group-info">×</span>
                        <div class="validation-error" id="guild_br_71_error"></div>
                    </div>
                </div>
                <div class="rounded-md mr-8">
                    <label for="guild_br_92" class="input-label">≥ 92</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_br_92" id="guild_br_92" value="@Model.GuildConfig.BetRoll92Multiplier" class="input-group-text">
                        <span class="input-group-info">×</span>
                        <div class="validation-error" id="guild_br_92_error"></div>
                    </div>
                </div>
                <div class="rounded-md">
                    <label for="guild_br_100" class="input-label pt-1 sm:pt-0">= 100</label>
                    <div class="mt-1 flex rounded-md">
                        <input type="number" name="guild_br_100" id="guild_br_100" value="@Model.GuildConfig.BetRoll100Multiplier" class="input-group-text">
                        <span class="input-group-info">×</span>
                        <div class="validation-error" id="guild_br_100_error"></div>
                    </div>
                </div>
            </div>
            <span class="input-help" id="guild-br-mult-help">Payout multiplier if rolled above.</span>
        </div>
    </div>
</div>
<div class="block fixed inset-x-0 -bottom-16 z-20 transition ease-in-out" id="save-modal" onclick="">
    <div class="flex justify-center">
        <div class="bg-gray-600 sm:w-1/3 p-2 rounded shadow-md bg-opacity-95">
            <div class="flex justify-between items-center">
                <div class="pl-2 pr-4">You have unsaved changes.</div>
                <div class="text-center inline-flex">
                    <button class="hover:underline mr-4 focus:outline-none focus:ring-0" onclick="resetForm()">Reset</button>
                    <button id="save" class="rounded dark:bg-pink-800 focus:outline-none dark:hover:bg-pink-900 dark:focus:ring-pink-600 py-1.5 px-3 inline-flex" onclick="submitForm()">
                        <svg id="save-spinner" class="animate-spin -ml-1 mr-3 h-5 w-5 text-white text-center hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        <div id="save-text">Save</div>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
</form>
</div>
</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"></script>
<script>
    const sections = document.querySelectorAll(".settings");
    const nav = document.querySelectorAll(".nav-settings");
    const errorDivs = document.querySelectorAll(".validation-error");
    const inputsElements = document.getElementsByTagName("input");
    
    window.addEventListener("load", () => {
        nav.forEach(remove => {
            if (remove.classList.contains(window.location.hash.substr(1))) {
                remove.classList.add("sidenav-active");
            } else {
                remove.classList.remove("sidenav-active");
            }
        });
        if (window.location.hash === ""){
            document.getElementById("core-nav").classList.add("sidenav-active");
        }
    });
    window.addEventListener("scroll", () => {
        let current = "";
        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.clientHeight;
            if (pageYOffset >= (sectionTop - sectionHeight / 2)) {
                current = section.getAttribute("id");
            }
        });
        nav.forEach(n => {
            if (n.classList.contains(current)) {
                n.classList.add("sidenav-active");
            } else {
                n.classList.remove("sidenav-active");
            }
        });
    });
    nav.forEach(n => {
        n.addEventListener("click", () => {
            nav.forEach(remove => {
                if (remove.classList.contains(n.getAttribute("href").substr(1))) {
                    remove.classList.add("sidenav-active");
                } else {
                    remove.classList.remove("sidenav-active");
                }
            });
        });
    });
        
    // enable/disable save button when there are changes detected
    const coreForm = document.getElementById("form-data");
    let coreData = Object.fromEntries(new FormData(coreForm).entries());
    const save = document.getElementById("save-modal");
    const saveButton = document.getElementById("save");
    const saveSpinner = document.getElementById("save-spinner");
    
    function checkForm() {
        const newData = Object.fromEntries(new FormData(coreForm).entries());
        if (_.isEqual(coreData, newData)) {
            removeErrors();
            save.classList.remove("transform", "-translate-y-20");
            save.classList.add("transform", "translate-y-20");
            setTimeout(() => {save.classList.remove("transform", "translate-y-20");}, 200);
        } else {
            save.classList.add("transform", "-translate-y-20");
        } 
    }
    
    coreForm.addEventListener("keyup", () => checkForm());
    
    function resetForm(){
        coreForm.reset();
        checkForm();
        saveSpinner.classList.add("hidden");
    }
    
    const _oldFetch = fetch; 
    // Create our new version of the fetch function
    window.fetch = function(){
    
        // Create hooks
        const fetchStart = new Event( "fetchStart", { "view": document, "bubbles": true, "cancelable": false } );
        const fetchEnd = new Event( "fetchEnd", { "view": document, "bubbles": true, "cancelable": false } );
    
        // Pass the supplied arguments to the real fetch function
        const fetchCall = _oldFetch.apply(this, arguments);
    
        // Trigger the fetchStart event
        document.dispatchEvent(fetchStart);
    
        fetchCall.then(function(){
            // Trigger the fetchEnd event
            document.dispatchEvent(fetchEnd);
        }).catch(function(){
            // Trigger the fetchEnd event
            document.dispatchEvent(fetchEnd);
        });
    
        return fetchCall;
    };
        
    function addErrors(data) {
        for (const error in data){
            const element = document.getElementById(error);
            element.innerText = data[error];
        }
    }
    
    function removeErrors(){
        errorDivs.forEach(e => {
            e.innerHTML = "";
        });
    }
    
    function submitForm() {
        const data = Object.fromEntries(new FormData(document.getElementById("form-data")).entries());
        let hasNull = false;
        for (const key in data) {
            if (data[key] == null || data[key] === "") {
                save.classList.add("translate-y-20", "button-shake");
                setTimeout(() => {save.classList.remove("button-shake");}, 300);
                hasNull = true;
                break;
            }
        }
        removeErrors();
        
        if (!hasNull) {
            document.getElementById("save-spinner").classList.remove("hidden");
        }
        fetch("/manage/@Model.GuildConfig.GuildId/settings", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        })
            .then(res => {
                if (res.ok) {
                    coreData = data;
                } else if (res.status === 400)  {
                    res.json().then(errorData => {
                        addErrors(errorData);
                    });
                }
            })
            .catch((err) => {
                console.log("Error: " + err);
            });
    }
    
    document.addEventListener("fetchEnd", async function() {
        await new Promise(r => setTimeout(r, 1000));
        checkForm();
        saveSpinner.classList.add("hidden");
    });
</script>